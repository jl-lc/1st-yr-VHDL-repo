|LogicalStep_Lab4_top
Clkin_50 => Clock_Source:Clock_Selector.clk_input
Clkin_50 => segment7_mux:INST11.clk
pb_n[0] => Synch_inverter:INST1.input0
pb_n[1] => Synch_inverter:INST1.input1
pb_n[2] => Synch_inverter:INST1.input2
pb_n[3] => Synch_inverter:INST1.input3
sw[0] => Shift_Register:INST5.L[0]
sw[1] => Shift_Register:INST5.L[1]
sw[2] => Shift_Register:INST5.L[2]
sw[3] => Shift_Register:INST5.L[3]
sw[4] => Shift_Register:INST4.L[0]
sw[5] => Shift_Register:INST4.L[1]
sw[6] => Shift_Register:INST4.L[2]
sw[7] => Shift_Register:INST4.L[3]
leds[0] << XYMotion:INST6.error
leds[1] << State_Machine_Grabber:INST14.LED1
leds[2] << Bidir_shift_reg:INST13.REG_BITS[0]
leds[3] << Bidir_shift_reg:INST13.REG_BITS[1]
leds[4] << Bidir_shift_reg:INST13.REG_BITS[2]
leds[5] << Bidir_shift_reg:INST13.REG_BITS[3]
leds[6] << <GND>
leds[7] << <GND>
seg7_data[0] << segment7_mux:INST11.DOUT[0]
seg7_data[1] << segment7_mux:INST11.DOUT[1]
seg7_data[2] << segment7_mux:INST11.DOUT[2]
seg7_data[3] << segment7_mux:INST11.DOUT[3]
seg7_data[4] << segment7_mux:INST11.DOUT[4]
seg7_data[5] << segment7_mux:INST11.DOUT[5]
seg7_data[6] << segment7_mux:INST11.DOUT[6]
seg7_char1 << segment7_mux:INST11.DIG1
seg7_char2 << segment7_mux:INST11.DIG2


|LogicalStep_Lab4_top|Clock_Source:Clock_Selector
SIM_FLAG => clock_out.OUTPUTSELECT
clk_input => clock_out.DATAB
clk_input => \clk_divider:counter[0].CLK
clk_input => \clk_divider:counter[1].CLK
clk_input => \clk_divider:counter[2].CLK
clk_input => \clk_divider:counter[3].CLK
clk_input => \clk_divider:counter[4].CLK
clk_input => \clk_divider:counter[5].CLK
clk_input => \clk_divider:counter[6].CLK
clk_input => \clk_divider:counter[7].CLK
clk_input => \clk_divider:counter[8].CLK
clk_input => \clk_divider:counter[9].CLK
clk_input => \clk_divider:counter[10].CLK
clk_input => \clk_divider:counter[11].CLK
clk_input => \clk_divider:counter[12].CLK
clk_input => \clk_divider:counter[13].CLK
clk_input => \clk_divider:counter[14].CLK
clk_input => \clk_divider:counter[15].CLK
clk_input => \clk_divider:counter[16].CLK
clk_input => \clk_divider:counter[17].CLK
clk_input => \clk_divider:counter[18].CLK
clk_input => \clk_divider:counter[19].CLK
clk_input => \clk_divider:counter[20].CLK
clk_input => \clk_divider:counter[21].CLK
clk_input => \clk_divider:counter[22].CLK
clk_input => \clk_divider:counter[23].CLK
clock_out <= clock_out.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Synch_inverter:INST1
sync_clk => sync_grappler~reg0.CLK
sync_clk => sync_extender~reg0.CLK
sync_clk => sync_motion~reg0.CLK
sync_clk => sync_reset~reg0.CLK
sync_clk => stages_pb0[0].CLK
sync_clk => stages_pb0[1].CLK
sync_clk => stages_pb1[0].CLK
sync_clk => stages_pb1[1].CLK
sync_clk => stages_pb2[0].CLK
sync_clk => stages_pb2[1].CLK
sync_clk => stages_pb3[0].CLK
sync_clk => stages_pb3[1].CLK
input3 => stages_pb3[0].DATAIN
input2 => stages_pb2[0].DATAIN
input1 => stages_pb1[0].DATAIN
input0 => stages_pb0[0].DATAIN
sync_reset <= sync_reset~reg0.DB_MAX_OUTPUT_PORT_TYPE
sync_motion <= sync_motion~reg0.DB_MAX_OUTPUT_PORT_TYPE
sync_extender <= sync_extender~reg0.DB_MAX_OUTPUT_PORT_TYPE
sync_grappler <= sync_grappler~reg0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|U_D_Bin_Counter4bit:INST2
CLK => ud_bin_counter[0].CLK
CLK => ud_bin_counter[1].CLK
CLK => ud_bin_counter[2].CLK
CLK => ud_bin_counter[3].CLK
RESET => ud_bin_counter[0].ACLR
RESET => ud_bin_counter[1].ACLR
RESET => ud_bin_counter[2].ACLR
RESET => ud_bin_counter[3].ACLR
CLK_EN => process_0.IN0
CLK_EN => process_0.IN0
UP1_DOWN0 => process_0.IN1
UP1_DOWN0 => process_0.IN1
COUNTER_BITS[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|U_D_Bin_Counter4bit:INST3
CLK => ud_bin_counter[0].CLK
CLK => ud_bin_counter[1].CLK
CLK => ud_bin_counter[2].CLK
CLK => ud_bin_counter[3].CLK
RESET => ud_bin_counter[0].ACLR
RESET => ud_bin_counter[1].ACLR
RESET => ud_bin_counter[2].ACLR
RESET => ud_bin_counter[3].ACLR
CLK_EN => process_0.IN0
CLK_EN => process_0.IN0
UP1_DOWN0 => process_0.IN1
UP1_DOWN0 => process_0.IN1
COUNTER_BITS[0] <= ud_bin_counter[0].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[1] <= ud_bin_counter[1].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[2] <= ud_bin_counter[2].DB_MAX_OUTPUT_PORT_TYPE
COUNTER_BITS[3] <= ud_bin_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Shift_Register:INST4
clk_input => registers[0].CLK
clk_input => registers[1].CLK
clk_input => registers[2].CLK
clk_input => registers[3].CLK
reset => registers[0].ACLR
reset => registers[1].ACLR
reset => registers[2].ACLR
reset => registers[3].ACLR
parallel_load => registers[0].ENA
parallel_load => registers[1].ENA
parallel_load => registers[2].ENA
parallel_load => registers[3].ENA
L[0] => registers[0].DATAIN
L[1] => registers[1].DATAIN
L[2] => registers[2].DATAIN
L[3] => registers[3].DATAIN
outputs[0] <= registers[0].DB_MAX_OUTPUT_PORT_TYPE
outputs[1] <= registers[1].DB_MAX_OUTPUT_PORT_TYPE
outputs[2] <= registers[2].DB_MAX_OUTPUT_PORT_TYPE
outputs[3] <= registers[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Shift_Register:INST5
clk_input => registers[0].CLK
clk_input => registers[1].CLK
clk_input => registers[2].CLK
clk_input => registers[3].CLK
reset => registers[0].ACLR
reset => registers[1].ACLR
reset => registers[2].ACLR
reset => registers[3].ACLR
parallel_load => registers[0].ENA
parallel_load => registers[1].ENA
parallel_load => registers[2].ENA
parallel_load => registers[3].ENA
L[0] => registers[0].DATAIN
L[1] => registers[1].DATAIN
L[2] => registers[2].DATAIN
L[3] => registers[3].DATAIN
outputs[0] <= registers[0].DB_MAX_OUTPUT_PORT_TYPE
outputs[1] <= registers[1].DB_MAX_OUTPUT_PORT_TYPE
outputs[2] <= registers[2].DB_MAX_OUTPUT_PORT_TYPE
outputs[3] <= registers[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|XYMotion:INST6
CLK => error.DATAB
CLK => XYMotion_Component_2:INST1.CLK
CLK => XYMotion_Component_2:INST2.CLK
RESET => XYMotion_Component_2:INST1.RESET
RESET => XYMotion_Component_2:INST2.RESET
X_LT => XYMotion_Component_2:INST1.ALTB
X_EQ => XYMotion_Component_2:INST1.AEQB
X_GT => XYMotion_Component_2:INST1.AGTB
Y_LT => XYMotion_Component_2:INST2.ALTB
Y_EQ => XYMotion_Component_2:INST2.AEQB
Y_GT => XYMotion_Component_2:INST2.AGTB
motion => XYMotion_Component_2:INST1.motion
motion => XYMotion_Component_2:INST2.motion
motion => Capture_XY.DATAIN
ext_out => XYMotion_Component_2:INST1.ext_out
ext_out => XYMotion_Component_2:INST2.ext_out
X_clk_en <= XYMotion_Component_2:INST1.clk_en
Y_clk_en <= XYMotion_Component_2:INST2.clk_en
X_up_down <= XYMotion_Component_2:INST1.up_down
Y_up_down <= XYMotion_Component_2:INST2.up_down
Capture_XY <= motion.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE
extender_en <= process_0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|XYMotion:INST6|XYMotion_Component_2:INST1
CLK => current_state~1.DATAIN
RESET => current_state~3.DATAIN
ALTB => Decoder_Section.IN0
AEQB => next_state.DATAA
AEQB => next_state.DATAA
AGTB => Decoder_Section.IN0
motion => next_state.TRANSITION.DATAA
motion => Selector0.IN1
motion => Selector1.IN1
ext_out => next_state.OUTPUTSELECT
ext_out => next_state.OUTPUTSELECT
ext_out => error.DATAA
ext_out => Decoder_Section.IN1
ext_out => Decoder_Section.IN1
clk_en <= clk_en.DB_MAX_OUTPUT_PORT_TYPE
up_down <= up_down$latch.DB_MAX_OUTPUT_PORT_TYPE
Capture_XY <= Capture_XY.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE
extender_en <= extender_en.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|XYMotion:INST6|XYMotion_Component_2:INST2
CLK => current_state~1.DATAIN
RESET => current_state~3.DATAIN
ALTB => Decoder_Section.IN0
AEQB => next_state.DATAA
AEQB => next_state.DATAA
AGTB => Decoder_Section.IN0
motion => next_state.TRANSITION.DATAA
motion => Selector0.IN1
motion => Selector1.IN1
ext_out => next_state.OUTPUTSELECT
ext_out => next_state.OUTPUTSELECT
ext_out => error.DATAA
ext_out => Decoder_Section.IN1
ext_out => Decoder_Section.IN1
clk_en <= clk_en.DB_MAX_OUTPUT_PORT_TYPE
up_down <= up_down$latch.DB_MAX_OUTPUT_PORT_TYPE
Capture_XY <= Capture_XY.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE
extender_en <= extender_en.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST7
A[0] => compx1:INST4.A
A[1] => compx1:INST3.A
A[2] => compx1:INST2.A
A[3] => compx1:INST1.A
B[0] => compx1:INST4.B
B[1] => compx1:INST3.B
B[2] => compx1:INST2.B
B[3] => compx1:INST1.B
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST7|compx1:INST1
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST7|compx1:INST2
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST7|compx1:INST3
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST7|compx1:INST4
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST8
A[0] => compx1:INST4.A
A[1] => compx1:INST3.A
A[2] => compx1:INST2.A
A[3] => compx1:INST1.A
B[0] => compx1:INST4.B
B[1] => compx1:INST3.B
B[2] => compx1:INST2.B
B[3] => compx1:INST1.B
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST8|compx1:INST1
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST8|compx1:INST2
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST8|compx1:INST3
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|compx4:INST8|compx1:INST4
A => AGTB.IN0
A => AEQB.IN0
A => ALTB.IN0
B => AEQB.IN1
B => ALTB.IN1
B => AGTB.IN1
AGTB <= AGTB.DB_MAX_OUTPUT_PORT_TYPE
AEQB <= AEQB.DB_MAX_OUTPUT_PORT_TYPE
ALTB <= ALTB.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:INST9
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|SevenSegment:INST10
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
sevenseg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
sevenseg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|segment7_mux:INST11
clk => \clk_proc:COUNT[0].CLK
clk => \clk_proc:COUNT[1].CLK
clk => \clk_proc:COUNT[2].CLK
clk => \clk_proc:COUNT[3].CLK
clk => \clk_proc:COUNT[4].CLK
clk => \clk_proc:COUNT[5].CLK
clk => \clk_proc:COUNT[6].CLK
clk => \clk_proc:COUNT[7].CLK
clk => \clk_proc:COUNT[8].CLK
clk => \clk_proc:COUNT[9].CLK
clk => \clk_proc:COUNT[10].CLK
DIN2[0] => DOUT_TEMP.DATAB
DIN2[1] => DOUT_TEMP[1].DATAB
DIN2[2] => DOUT_TEMP.DATAB
DIN2[3] => DOUT_TEMP.DATAB
DIN2[4] => DOUT_TEMP.DATAB
DIN2[5] => DOUT_TEMP[5].DATAB
DIN2[6] => DOUT_TEMP[6].DATAB
DIN1[0] => DOUT_TEMP.DATAA
DIN1[1] => DOUT_TEMP[1].DATAA
DIN1[2] => DOUT_TEMP.DATAA
DIN1[3] => DOUT_TEMP.DATAA
DIN1[4] => DOUT_TEMP.DATAA
DIN1[5] => DOUT_TEMP[5].DATAA
DIN1[6] => DOUT_TEMP[6].DATAA
DOUT[0] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[1] <= DOUT[1].DB_MAX_OUTPUT_PORT_TYPE
DOUT[2] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[3] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[4] <= DOUT_TEMP.DB_MAX_OUTPUT_PORT_TYPE
DOUT[5] <= DOUT[5].DB_MAX_OUTPUT_PORT_TYPE
DOUT[6] <= DOUT[6].DB_MAX_OUTPUT_PORT_TYPE
DIG2 <= \clk_proc:COUNT[10].DB_MAX_OUTPUT_PORT_TYPE
DIG1 <= \clk_proc:COUNT[10].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|State_Machine_Extender:INST12
clk_input => current_state~1.DATAIN
reset => current_state~3.DATAIN
enable => next_state.MRIGHT.IN1
enable => next_state.MRIGHT.OUTPUTSELECT
enable => next_state.MRIGHT.IN1
enable => next_state.MLEFT.OUTPUTSELECT
enable => next_state.BC.OUTPUTSELECT
pb => Transition_Section.IN1
pb => Transition_Section.IN1
pb => next_state.MRIGHT.OUTPUTSELECT
pb => next_state.MRIGHT.IN1
pb => next_state.MLEFT.OUTPUTSELECT
pb => next_state.BC.DATAA
pb => Selector0.IN1
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
leds[0] => Equal0.IN3
leds[0] => Equal1.IN3
leds[1] => Equal0.IN2
leds[1] => Equal1.IN2
leds[2] => Equal0.IN1
leds[2] => Equal1.IN1
leds[3] => Equal0.IN0
leds[3] => Equal1.IN0
lr <= lr.DB_MAX_OUTPUT_PORT_TYPE
clkEN <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
ext_out <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
grappler_en <= grappler_en$latch.DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|Bidir_shift_reg:INST13
CLK => sreg[0].CLK
CLK => sreg[1].CLK
CLK => sreg[2].CLK
CLK => sreg[3].CLK
RESET => sreg[0].ACLR
RESET => sreg[1].ACLR
RESET => sreg[2].ACLR
RESET => sreg[3].ACLR
CLK_EN => sreg[2].ENA
CLK_EN => sreg[1].ENA
CLK_EN => sreg[0].ENA
CLK_EN => sreg[3].ENA
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
LEFT0_RIGHT1 => sreg.OUTPUTSELECT
REG_BITS[0] <= sreg[0].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[1] <= sreg[1].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[2] <= sreg[2].DB_MAX_OUTPUT_PORT_TYPE
REG_BITS[3] <= sreg[3].DB_MAX_OUTPUT_PORT_TYPE


|LogicalStep_Lab4_top|State_Machine_Grabber:INST14
clk_input => current_state~1.DATAIN
reset => current_state~3.DATAIN
grappler => Selector0.IN3
grappler => Selector3.IN3
grappler => next_state.GOPENHOLD.DATAA
grappler => Selector1.IN3
grappler => next_state.GCLOSED.DATAA
grappler => Selector4.IN3
grappler_en => next_state.GCLOSED.OUTPUTSELECT
grappler_en => next_state.GOPENHOLD.OUTPUTSELECT
LED1 <= LED1.DB_MAX_OUTPUT_PORT_TYPE


